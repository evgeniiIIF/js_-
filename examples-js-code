____________________________________Методы массивов_____________________________________

------arr.filter()--------Фильтрация по диапазону

let array = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];

function rangeArr(arr, a,b) {
  return arr.filter( item => (item >= a && item <= b) );
}
let obj = {
  name: 'Jon',
  surname: 'Smith',
  age: 22
};

let obj2 = Object.fromEntries(Object.values(obj).map((item, index) => [index, item]) )
console.log(obj2)
let a = rangeArr(array, 4,8)

console.log(a) // [4, 5, 6, 7, 8]

------arr.filter()--------Фильтрация по диапазону на месте

let array = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20];

function rangeArr(arr, a,b) {
  for ( let i = 0; i < arr.length; i++ ) {
    let vel = arr[i];
    
    if ( vel < a || vel > b ) {
      arr.splice( i, 1 );
      i--;
    }
  }
}

rangeArr(array, 4, 9);

console.log(array) // [4, 5, 6, 7, 8, 9]

------arr.map()--------Вид строки

let str = "background-color";

function camelize(str) {
  return str
    .split('-')
    .map( (item, index) => (index == 0) ? item: item[0].toUpperCase() + item.slice(1)  )
    .join("")
  
}

let a = camelize(str);

console.log(a);

------arr.sort()--------Сортировка массива по убыванию

let arr = [5, 2, 1, -10, 8];

function sortArr(arr) {
  arr
    .sort( (a, b) => a - b )
    .reverse()
}

sortArr(arr)
console.log(arr)

_______Создать расширяемый калькулятор__________

str = "1 + 4";

let calc = {
  methods: {
    "+":(a, b) => a + b,
    "-":(a, b) => a - b,
  },
  
  calculate: function(str) {
    str = str.split(" ");
    a = str[0];
    op = str[1];
    b = str[2];
    
    if( !isFinite(a) || !this.methods[op] || !isFinite(b) ) {
      return "NO";
    }
    
    return this.methods[op](+a, +b);
  },
  
  addMethod: function(oper, func) {
    this.methods[oper] = func;
    console.log(this.methods)
  }
  
  
}

calc.addMethod("*", (a, b) => a * b);

console.log(calc.calculate(prompt("virag", "viregenie")))

___________________Перебираемые обьекты_______________

et range = {
  from: 1,
  to: 5,
  [Symbol.iterator]: function(){
    return  {
      current: this.from,
      last: this.to,
      
      next() {
        if (this.current <= this.last) {
          return {done: false, value: this.current++};
        }else {
          return {done: true};
        }
      }
    }
  }
};

// for(key of range) {
//   console.log(key);
// }


let a = range[Symbol.iterator]();

console.log(a.next());
console.log(a.next());
console.log(a.next());
console.log(a.next());
console.log(a.next());
console.log(a.next());
console.log(a.next());
____________________________Числа фебоначи___________________________
function feb(n) {
  let a = 0, b = 1, arr;
  n > 0 ? arr = [a,b]: arr = [a];
  for (let i = 2; i <= n; i++ ) {
    [a,b] = [b, a + b];
    arr.push(b);
  }
  return arr
}

console.log(feb(1))

__________________Из обьекта в псевдомассив___________________
let obj = {
  name: 'Jon',
  surname: 'Smith',
  age: 22
};

let obj2 = Object.fromEntries(Object.values(obj).map((item, index) => [index, item]) )
obj.length = Object.keys(obj).length
console.log(obj2)






